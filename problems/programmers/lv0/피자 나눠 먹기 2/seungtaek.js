
// n = 10 으로 가정

function solution(n) {
  // 인원수 a ,피자갯수b
  let a = n;
  let b = 6;

  // 최대공약수 만들기
  // 나머지가 0이 될떄까지 while 반복문을 돈다.
  while(a % b !== 0){
      // 10%6 = 4(r)
      let r = a % b;
      // r이 0이 아닐떄 다시 재할당을 해준다 
      if(r !== 0){
          a = b;
          b = r;
      }
  }
  
  // 최소공배수 = 두 자연수의 곱 / 최대공약수
  // 여기서 n = a라고 생각하고 풀면 더 쉽게 생각가능, 유클리드 호제법 (a>b)를 떠올리자.
  let min = (n * 6) / b;

  return min / 6;
}

// 풀이
// 유클리드 호제법을 이용한 풀이 (a>b)
// 2개의 자연수(또는 정식) a, b에 대해서 a를 b로 나눈 나머지를 r이라 하면(단, a>b), a와 b의 최대공약수는 b와 r의 최대공약수와 같다.
// 1. b를 r로 나눈 나머지를 r' 구하고, 다시 r을 r'로 나눈 나머지를 구하는 과정을 반복
// 2. 나머지가 0 되었을 떄 나누는 수(b)가 a와 b의 최대공약수