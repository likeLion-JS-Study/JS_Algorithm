// 한수
// 문제 번호 : 1065

/*
문제

어떤 양의 정수 X의 각 자리가 등차수열을 이룬다면, 그 수를 한수라고 한다. 등차수열은 연속된 두 개의 수의 차이가 일정한 수열을 말한다. N이 주어졌을 때, 1보다 크거나 같고, N보다 작거나 같은 한수의 개수를 출력하는 프로그램을 작성하시오. 
*/

/*
입력

첫째 줄에 1,000보다 작거나 같은 자연수 N이 주어진다.
*/

/*
출력

첫째 줄에 1보다 크거나 같고, N보다 작거나 같은 한수의 개수를 출력한다.
*/

/* 
문제를 풀기 전 등차수열에 대해 이해해야할 필요가 있다. 등차수열은 "'등차' = 차이가 같다 무엇이? '수열'이!" 나열된 수의 차이를 공통된 차이라고 하여 공차라고 정의한다.
즉, 등차수열은 공통된 차이를 가진 수열을 의미한다고 할 수있다.

문제는 양의 정수 N이 주어졌을 떄 각 자리가 서로 등차수열을 이루는 한수를 1<=X<N 만큼 개수를 출력하려고 한다.

입력되는 값은 1,000보다 작아야 하므로 100의 자리까지 등차수열이 이루어지는 지 확인한다.

즉, 입력값으로 주어지는 값보다 작은 수열에서 각 자리끼리 등차수열을 만족하는 수열을 뽑아내면 되는 문제이다. 입력값을 수로 받아들기보다 수열로 받아들이면 된다.

그래서 1 - 9까지는 어차피 자리가 일의자리밖에 없어서 전부 등차수열로 취급하고, 10 ~ 99는 일의자리와 십의자리의 공차를 확인하면 된다. 10~99까지도 비교할 수열이 더 없으므로 n의공차를 만족하는 등차수열이 된다. 백의 자리부터는 100은 공차가 -1 0이므로 등차수열을 만족하지 않는다. 이런 식으로 주어진 입력값까지 등차수열을 만족하는 한수를 찾아내면 되는 문제이다.
*/

const input = require("fs")
  .readFileSync("example.txt")
  .toString()
  .trim()
  .split()
  .map(Number);

const result = (input) => {
  let cnt = 0;
  // 한수의 개수 파악하기 위한 count
  for (let i = 1; i <= input[0]; i++) {
    if (i < 100) {
      // 100보다 작은 값은 전부 등차수열을 만족한다.
      cnt++;
    } else if (100 <= i && i < 1000) {
      let iNum = String(i);
      //입력값을 문자열로 받아서 공차를 받아낸다
      let diff1 = parseInt(iNum[1]) - parseInt(iNum[0]);
      // 1의 자리와 10의 자리의 공차
      let diff2 = parseInt(iNum[2]) - parseInt(iNum[1]);
      // 10의 자리와 100의 자리의 공차
      if (diff1 === diff2) {
        cnt++;
        // else if에서 각 자리의 공차가 같다면 count의 수가 올라가도록 설정한다.
      }
    }
  }
  return cnt;
  // 반복문이 완료되면 값을 반환한다.
};

console.log(result(input));
